"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Jul 10 19:22:17 UTC 2025","Thu Jul 10 19:22:17 UTC 2025","284","","com.example.tests.PutTests","","com.example.tests.PutTests","testUpdateWithEmptyBody","testUpdateWithEmptyBody()","Verify that PUT /posts/{id} with an empty body still returns 200 on mock API"
"passed","Thu Jul 10 19:22:16 UTC 2025","Thu Jul 10 19:22:16 UTC 2025","298","","com.example.tests.PutTests","","com.example.tests.PutTests","testUpdatePostWithPartialData","testUpdatePostWithPartialData()","Verify that PUT /posts/{id} updates only provided fields"
"passed","Thu Jul 10 19:22:18 UTC 2025","Thu Jul 10 19:22:18 UTC 2025","150","","com.example.tests.PostTests","","com.example.tests.PostTests","testCreatePostWithMinimalData","testCreatePostWithMinimalData()","Verify that POST /posts works with only required fields"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","81","","com.example.tests.GetTests","","com.example.tests.GetTests","testGetPostWithInvalidIdZero","testGetPostWithInvalidIdZero()","Verify that GET /posts/0 returns 404"
"passed","Thu Jul 10 19:22:17 UTC 2025","Thu Jul 10 19:22:18 UTC 2025","291","","com.example.tests.PostTests","","com.example.tests.PostTests","testCreatePost","testCreatePost()","Verify that POST /posts successfully creates a new post"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","183","","com.example.tests.DeleteTests","","com.example.tests.DeleteTests","testDeleteNonExistingPost","testDeleteNonExistingPost()","Verify that deleting a non-existing post still returns 200 (or 404 in real API)"
"passed","Thu Jul 10 19:22:18 UTC 2025","Thu Jul 10 19:22:18 UTC 2025","172","","com.example.tests.PostTests","","com.example.tests.PostTests","testPostWithEmptyFields","testPostWithEmptyFields()","Verify that POST /posts accepts empty fields"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:15 UTC 2025","281","","com.example.tests.DeleteTests","","com.example.tests.DeleteTests","testDeletePost","testDeletePost()","Verify that DELETE /posts/1 deletes a post successfully"
"passed","Thu Jul 10 19:22:15 UTC 2025","Thu Jul 10 19:22:15 UTC 2025","266","","com.example.tests.DeleteTests","","com.example.tests.DeleteTests","testDeleteNonExistentPost","testDeleteNonExistentPost()","Verify that DELETE /posts/{id} on non-existent resource returns 200"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","81","","com.example.tests.GetTests","","com.example.tests.GetTests","testGetPostWithInvalidId","testGetPostWithInvalidId()","Verify that GET /posts/9999 returns 404 when post does not exist"
"failed","Thu Jul 10 19:22:15 UTC 2025","Thu Jul 10 19:22:15 UTC 2025","296","","com.example.tests.DeleteTests","","com.example.tests.DeleteTests","testDeleteWithInvalidIdFormat","testDeleteWithInvalidIdFormat()","Verify that DELETE with non-numeric ID returns client/server error"
"passed","Thu Jul 10 19:22:15 UTC 2025","Thu Jul 10 19:22:16 UTC 2025","310","","com.example.tests.PutTests","","com.example.tests.PutTests","testUpdatePost","testUpdatePost()","Verify that PUT /posts/1 updates the post title successfully"
"passed","Thu Jul 10 19:22:12 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","1931","","com.example.tests.GetTests","","com.example.tests.GetTests","testGetPostById","testGetPostById()","Verify that GET /posts/1 returns post with ID = 1"
"passed","Thu Jul 10 19:22:17 UTC 2025","Thu Jul 10 19:22:17 UTC 2025","162","","com.example.tests.PostTests","","com.example.tests.PostTests","testCreatePostWithMissingTitle","testCreatePostWithMissingTitle()","Verify that POST /posts with missing title returns 400 or unexpected behavior"
"failed","Thu Jul 10 19:22:16 UTC 2025","Thu Jul 10 19:22:17 UTC 2025","595","","com.example.tests.PutTests","","com.example.tests.PutTests","testUpdateWithInvalidIdFormat","testUpdateWithInvalidIdFormat()","Verify that PUT with a non-numeric ID fails"
"passed","Thu Jul 10 19:22:15 UTC 2025","Thu Jul 10 19:22:15 UTC 2025","260","","com.example.tests.DeleteTests","","com.example.tests.DeleteTests","testDoubleDelete","testDoubleDelete()","Verify that deleting the same resource twice returns consistent status"
"failed","Thu Jul 10 19:22:17 UTC 2025","Thu Jul 10 19:22:17 UTC 2025","290","","com.example.tests.PutTests","","com.example.tests.PutTests","testUpdateNonExistingPost","testUpdateNonExistingPost()","Verify that updating a non-existing post returns 200 or unexpected behavior"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","70","","com.example.tests.GetTests","","com.example.tests.GetTests","testGetNonExistentPost","testGetNonExistentPost()","Verify that GET /posts/9999 returns empty object"
"passed","Thu Jul 10 19:22:18 UTC 2025","Thu Jul 10 19:22:18 UTC 2025","137","","com.example.tests.PostTests","","com.example.tests.PostTests","testCreatePostWithMalformedJson","testCreatePostWithMalformedJson()","Verify that POST /posts with malformed JSON fails"
"passed","Thu Jul 10 19:22:14 UTC 2025","Thu Jul 10 19:22:14 UTC 2025","169","","com.example.tests.GetTests","","com.example.tests.GetTests","testGetAllPosts","testGetAllPosts()","Verify that GET /posts returns a list of posts"
